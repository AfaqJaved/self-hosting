version: '2.1'
services:
  nocodb:
    environment:
      NC_DB: ${NC_DB}
      NC_AUTH_JWT_SECRET: ${NC_AUTH_JWT_SECRET}
      NC_ADMIN_EMAIL: ${NC_ADMIN_EMAIL}
      NC_ADMIN_PASSWORD: ${NC_ADMIN_PASSWORD}
      NC_S3_BUCKET_NAME: ${NC_S3_BUCKET_NAME} # storage settings
      NC_S3_REGION: ${NC_S3_REGION}
      NC_S3_ENDPOINT: ${NC_S3_ENDPOINT}
      NC_S3_ACCESS_KEY: ${NC_S3_ACCESS_KEY}
      NC_S3_ACCESS_SECRET: ${NC_S3_ACCESS_SECRET}
      NC_S3_FORCE_PATH_STYLE: ${NC_S3_FORCE_PATH_STYLE}
      NC_SMTP_FROM: ${NC_SMTP_FROM} # smtp settings
      NC_SMTP_HOST: ${NC_SMTP_HOST}
      NC_SMTP_PORT: ${NC_SMTP_PORT}
      NC_SMTP_USERNAME: ${NC_SMTP_USERNAME}
      NC_SMTP_PASSWORD: ${NC_SMTP_PASSWORD}
      NC_SMTP_SECURE: ${NC_SMTP_SECURE}
      NC_SMTP_IGNORE_TLS: ${NC_SMTP_IGNORE_TLS}
      NC_SMTP_REJECT_UNAUTHORIZED: ${NC_SMTP_REJECT_UNAUTHORIZED}
      NC_PUBLIC_URL: ${NC_PUBLIC_URL} # frontend url
      NC_REDIS_URL: ${NC_REDIS_URL} # redis
    image: "nocodb/nocodb:latest"
    #ports:
    #  - "8080:8080" commenting since i am using nginx proxy manager
    restart: always
    volumes:
      - "nc_data:/usr/app/data"
    networks:
      - nginx
      - shared_postgres
      - shared_redis
      - shared_minio

  # use this if you want to connect to postgres in the same network
  # root_db:
  #   environment:
  #     POSTGRES_DB: root_db
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_USER: postgres
  #   healthcheck:
  #     interval: 10s
  #     retries: 10
  #     test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
  #     timeout: 2s
  #   image: postgres:16.6
  #   restart: always
  #   volumes:
  #     - "db_data:/var/lib/postgresql/data"
volumes:
  nc_data: {}

networks:
  nginx:
    external: true